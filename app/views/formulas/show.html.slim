- meta title: @formula.name, description: truncate(@formula.description.presence || Rails.configuration.description, length: 160)

.container.mt-5
  .row.mt-2
    .col
      h1
        = @formula.name
        - unless @formula.external?
          small.ml-3= @formula.filename
        '
        span.badge class="badge-#{@formula.inactive? ? 'danger' : 'success'}"= @formula.inactive? ? t('inactive') : t('active')
        - unless @formula.external?
          = link_to 'Tweet', 'https://twitter.com/share', class: 'twitter-share-button float-right', data: { text: "I have installed #{@formula.name} with homebrew", via: 'brewformulas', related: "machomebrew" }

      - if @formula.external?
        p.text-info= t('.external_formula_description')

      hr

  .row.mt-2
    .col-lg-8
      h2= t('description').capitalize
      - if @formula.description?
        blockquote.blockquote
          p.mb-0= @formula.description
          - if @formula.description_automatic?
            footer.blockquote-footer
              == t('.extracted_automatically_from', title: @formula.homepage, name: @formula.name)
      - else
        .alert.alert-info
          = t('.no_description_available')
          '
          == t('.you_can_request_update_with_link', link: refresh_formula_path(@formula.name))
      = link_to t('.open_new_issue'), homebrew_new_issue_github_url(title: @formula.name), class: 'btn btn-secondary', data: { toggle: 'tooltip' }, title: t('.report_issue_title'), target: '_blank'
    .col-lg-4
      dl.dl-horizontal
        dt= t('homepage').capitalize
        dd
          a href="#{@formula.homepage}" target="_blank"= @formula.homepage
        dt= t('version').capitalize
        dd= @formula.version || t('unavailable').capitalize
        dt= t('source_file').capitalize
        dd
          = octicon 'mark-github'
          '
          = link_to t('source_file'), @formula.url, target: '_blank'
        dt= t('hits')
        dd= @formula.hits

  - unless @formula.external?
    .row.mt-3
      .col
        h4= t('.install_formula', name: @formula.name)
        pre
          code= "brew install #{@formula.filename}"
        br

  .row.mt-2
    .col
      h4
        = t('dependency').pluralize.capitalize
        '
        span class="badge badge-default badge-pill" title="#{t('.dependency_count')}"= @formula.dependencies.size
      - if @formula.dependencies.blank?
        p= t('.no_dependencies')
      - else
        p= t('.the_following_dependencies_will_be_installed', dependency: pluralize(@formula.dependencies.size, t('dependency'), nil, no_count_if_one: true), name: @formula.name)
        span#formula-dependents
          = render partial: 'shared/formula_list', locals: { formulas: @formula.dependencies.order(:name).first(3), formula_count: @formula.dependencies.count, formula_name: @formula.name, show_other_formulae_link: true, formula_type: 'dependencies' }

  - if @formula.dependents.present?
    .row.mt-2
      .col
        h4
          = t('dependent').capitalize.pluralize
          '
          span class="badge badge-default badge-pill" title="Dependents count"= @formula.dependents.size
        p.dependents
          | This formula is required by
          '
          span#formula-dependents
            = render partial: 'shared/formula_list', locals: { formulas: @formula.dependents.order(:name).first(3), formula_count: @formula.dependents.count, formula_name: @formula.name, show_other_formulae_link: true, formula_type: 'dependents' }

  - if @formula.conflicts.present?
    .row.mt-2
      .col
        h4
          = t('conflict').capitalize.pluralize
          '
          span class="badge badge-default badge-pill" title="#{t('.conflict_count')}"= @formula.conflicts.size
        p.conflicts
          = t('.this_formula_is_in_conflict_with_the_following')
          '
          ul.list-inline#formula_conflicts
            - @formula.conflicts.each do |conflict|
              li.conflict
                = link_to formula_path(conflict.name) do
                  = octicon 'link'
                  '
                  = conflict.name
